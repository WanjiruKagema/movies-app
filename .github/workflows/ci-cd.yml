name: CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
    build:
      name: push docker image to docker hub
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: login to docker hub
          id: docker-hub
          env:
            username: ${{secrets.DOCKERHUB_USERNAME}}
            password: ${{secrets.DOCKERHUB_PASSWORD}}
          run: |
            docker login -u $username -p $password 
        - name: build the docker image
          id: build-docker-image
          env:
            mongouri: ${{secrets.MONGODB_URI_ENV}}
          run: |
            ls -la 
            docker build --build-arg MONGODB_URI=$mongouri . -f Dockerfile -t dhruvin30/demo-image-test:latest
        - name: push the docker image
          id: push-docker-image
          run: docker push ${{secrets.DOCKERHUB_USERNAME}}/demo-image-test:latest


# name: CI/CD Pipeline

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3

#     - name: Set up Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: '20'

#     - name: Install dependencies
#       run: npm install

#     - name: Build
#       run: npm run build

#     - name: Build Docker image
#       run: docker build -t movie-app .

    

    # - name: Set up Minikube
    #   uses: medyagh/setup-minikube@master

    # - name: Deploy to Minikube
    #   run: |
    #     eval $(minikube docker-env)
    #     docker build -t movie-app .
    #     kubectl apply -f k8s/
